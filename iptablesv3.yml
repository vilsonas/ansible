- name: Install and configure strict iptables firewall
  hosts: test2
  become: true
  tasks:

    - name: Install iptables
      ansible.builtin.package:
        name: iptables
        state: present

    - name: Set default policies to ACCEPT temporarily (to avoid lockout)
      ansible.builtin.iptables:
        chain: "{{ item }}"
        policy: ACCEPT
      loop:
        - INPUT
        - OUTPUT
        - FORWARD

    - name: Flush existing iptables rules and custom chains
      ansible.builtin.shell: |
        iptables -F
        iptables -X

    - name: Apply INPUT rules
      ansible.builtin.shell: |
        iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -p udp --dport 53 -j ACCEPT
        iptables -A INPUT -i lo -j ACCEPT
        iptables -A INPUT -p tcp --dport 10050 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -s 192.168.193.100/32 -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -s 192.168.189.0/24 -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -s 192.168.190.0/24 -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A INPUT -p icmp --icmp-type 0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        iptables -A INPUT -p icmp --icmp-type 8 -j REJECT --reject-with icmp-host-unreachable
        iptables -A INPUT -j LOG --log-prefix "IPTABLES DROP INPUT: " --log-level 5

    - name: Apply OUTPUT rules
      ansible.builtin.shell: |
        iptables -A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 5614 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 1514 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p udp --dport 514 -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 389 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p tcp --dport 2222 -m conntrack --ctstate NEW -j ACCEPT
        iptables -A OUTPUT -p icmp --icmp-type 8 -j ACCEPT
        iptables -A OUTPUT -o lo -j ACCEPT
        iptables -A OUTPUT -j LOG --log-prefix "IPTABLES DROP OUTPUT: " --log-level 5

    - name: Set default policies to DROP
      ansible.builtin.iptables:
        chain: "{{ item }}"
        policy: DROP
      loop:
        - INPUT
        - OUTPUT
        - FORWARD

    - name: Ensure iptables-persistent is installed (Debian/Ubuntu)
      ansible.builtin.package:
        name: iptables-persistent
        state: present
      when: ansible_facts['os_family'] == 'Debian'

    - name: Save iptables rules to /etc/iptables/rules.v4 (Debian/Ubuntu)
      ansible.builtin.shell: iptables-save | tee /etc/iptables/rules.v4 > /dev/null
      when: ansible_facts['os_family'] == 'Debian'
